name: release
on:
  push:
    tags:
      - 'v*'

# see: https://markkarpov.com/post/github-actions-for-haskell-ci.html
# see: http://taylor.fausak.me/2016/05/09/add-files-to-github-releases/
# see: https://github.com/actions/upload-release-asset/issues/56

jobs:
  create_release:
    name: Create one release for all OS outputs
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
      version: ${{ steps.get-version.outputs.version }}

    steps:
    - name: Get the version
      id: get-version
      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\/v/}

    - name: Create the release
      if: ${{ success() }}
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: v${{ steps.get-version.outputs.version }}
        draft: false
        prerelease: true


  build_upload:
    name: Build and upload on ${{ matrix.os }}-ghc${{ matrix.ghc }}
    needs: [create_release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        ghc: ["8.10.4"]
        cabal: ["3.4.0.0"]
    outputs:
      commit_sha: ${{ steps.get_sha.outputs.sha }}

    steps:
    - uses: actions/checkout@v2
      name: Checkout repository

    - name: Get SHA of latest commit
      id: get_sha
      run: echo "::set-output name=sha::$(git rev-parse HEAD)"

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      name: Set up Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Update cabal and get dependency list
      run: |
        cabal update
        cabal freeze

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/store
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-

    - name: Build and test
      run: |
        cabal build all
        cabal test abbotsbury:test:tests

    - name: Install (Linux)
      if: ${{ runner.os == 'Linux' }}
      run: |
        mkdir bdist
        cabal install exe:abbot --install-method=copy --overwrite-policy=always --installdir=bdist
        cd bdist
        sudo apt-get install upx -y
        upx abbot
        tar cf abbot-${{ needs.create_release.outputs.version }}-${{ runner.os }}.tar.gz abbot

    - name: Upload release asset (Linux)
      if: ${{ runner.os == 'Linux' }}
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./bdist/abbot-${{ needs.create_release.outputs.version }}-${{ runner.os }}.tar.gz
        asset_name: abbot-${{ needs.create_release.outputs.version }}-${{ runner.os }}.tar.gz
        asset_content_type: application/octet-stream

# By this point we have a few outputs which we can use.
# ${{ needs.create_release.outputs.version }}   -- the version number without leading 'v'
# ${{ needs.build_upload.outputs.commit_sha }}  -- the commit hash

  homebrew:
    name: Build and distribute Catalina Homebrew bottle
    runs-on: macOS-10.15
    needs: [create_release, build_upload]
    steps:
      - name: Checkout the Homebrew tap
        uses: actions/checkout@v2
        with:
          repository: yongrenjie/homebrew-abbotsbury
          token: ${{ secrets.HOMEBREW_ABBOT_API_TOKEN }}

      - name: Edit the url field in the Homebrew formula
        run: |
          /usr/bin/sed -i "" -E 's/  url "https:\/\/github.com\/yongrenjie\/abbotsbury.git.+/  url "https:\/\/github.com\/yongrenjie\/abbotsbury.git", tag: "v${{ needs.create_release.outputs.version }}", revision: "${{ needs.build_upload.outputs.commit_sha }}"/g' Formula/abbotsbury.rb

      - name: Update the Homebrew tap (first time)
        run: |
          git add -A
          git commit -m "Bump source code to v${{ needs.create_release.outputs.version }}"
          git push

      - name: Build a bottle using Homebrew
        id: build_bottle
        run: |
          brew tap yongrenjie/abbotsbury
          brew install --build-bottle --verbose abbotsbury
          brew bottle abbotsbury --no-rebuild
          echo "::set-output name=executable_sha256::$(shasum -a 256 ./abbotsbury--${{ needs.create_release.outputs.version }}.catalina.bottle.tar.gz | cut -d' ' -f1)"

      - name: Upload the bottle to the GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./abbotsbury--${{ needs.create_release.outputs.version }}.catalina.bottle.tar.gz
          asset_name: abbotsbury-${{ needs.create_release.outputs.version }}.catalina.bottle.tar.gz
          asset_content_type: application/gzip

      - name: Edit the bottle field
        run: |
          /usr/bin/sed -i "" -E 's/    root_url "https:\/\/github.com\/yongrenjie.+/    root_url "https:\/\/github.com\/yongrenjie\/abbotsbury\/releases\/download\/v${{ needs.create_release.outputs.version }}"/g' Formula/abbotsbury.rb
          /usr/bin/sed -i "" -E 's/    sha256 cellar.+/    sha256 cellar: :any, catalina: "${{ steps.build_bottle.outputs.executable_sha256 }}"/g' Formula/abbotsbury.rb

      - name: Update the Homebrew tap (second time)
        run: 
          git add -A
          git commit -m "Bump bottle to v${{ needs.create_release.outputs.version }}"
          git push

